/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "stm32EncoderLcdI2c_menu.h"

// Global variable declarations
const  ConnectorLocalInfo applicationInfo = { "Space Heater", "b04706cc-5acd-477a-81b9-0770e37a9546" };

LiquidCrystal lcd(2, 1, 0, 4, 5, 6, 7);
LiquidCrystalRenderer renderer(lcd, 16, 2);

// Global Menu Item declarations
const BooleanMenuInfo minfoSettingsFan = { "Fan", 6, 0xffff, 1, NO_CALLBACK, NAMING_TRUE_FALSE };
BooleanMenuItem menuSettingsFan(&minfoSettingsFan, true, NULL);
const AnalogMenuInfo minfoSettingsTemp = { "Temp", 5, 2, 100, NO_CALLBACK, 0, 1, "C" };
AnalogMenuItem menuSettingsTemp(&minfoSettingsTemp, 0, &menuSettingsFan);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsRtCall, backSubItemRenderFn, "Settings", -1, NO_CALLBACK)
const SubMenuInfo minfoSettings = { "Settings", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettings(fnSettingsRtCall, &menuSettingsTemp);
SubMenuItem menuSettings(&minfoSettings, &menuBackSettings, NULL);
const AnalogMenuInfo minfoTempHtr = { "Temp htr", 3, 0xffff, 1500, NO_CALLBACK, 0, 10, "C" };
AnalogMenuItem menuTempHtr(&minfoTempHtr, 0, &menuSettings);
const AnalogMenuInfo minfoTempRoom = { "Temp room", 2, 0xffff, 1500, NO_CALLBACK, 0, 10, "C" };
AnalogMenuItem menuTempRoom(&minfoTempRoom, 0, &menuTempHtr);
const char enumStrStatus_0[] = "HeatFan";
const char enumStrStatus_1[] = "Heater";
const char enumStrStatus_2[] = "Fan";
const char enumStrStatus_3[] = "Error";
const char enumStrStatus_4[] = "Off";
const char* const enumStrStatus[]  = { enumStrStatus_0, enumStrStatus_1, enumStrStatus_2, enumStrStatus_3, enumStrStatus_4 };
const EnumMenuInfo minfoStatus = { "Status", 1, 0xffff, 4, NO_CALLBACK, enumStrStatus };
EnumMenuItem menuStatus(&minfoStatus, 4, &menuTempRoom);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).

    // Now add any readonly, non-remote and visible flags.
    menuTempHtr.setReadOnly(true);
    menuTempRoom.setReadOnly(true);
    menuStatus.setReadOnly(true);

    // Code generated by plugins.
    lcd.setIoAbstraction(ioFrom8574(0x47, 0xff, &i2cDisplay));
    lcd.begin(16, 2);
    renderer.setUpdatesPerSecond(2);
    lcd.configureBacklightPin(3);
    lcd.backlight();
    switches.init(internalDigitalIo(), SWITCHES_NO_POLLING, true);
    menuMgr.initForEncoder(&renderer, &menuStatus, PC_8, PC_10, PC_9);
}

