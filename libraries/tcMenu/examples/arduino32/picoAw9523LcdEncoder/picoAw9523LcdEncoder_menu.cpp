/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "picoAw9523LcdEncoder_menu.h"

// Global variable declarations
const  ConnectorLocalInfo applicationInfo = { "picoAw9523LcdEncoder", "b547b450-b96d-4d14-bd2d-47b21787f54a" };
AW9523IoAbstraction iodev_aw9523(0x58, 15);
IoAbstractionRef ioexp_aw9523 = &iodev_aw9523;
LiquidCrystal lcd(8, 10, 11, 12, 13, 14);
LiquidCrystalRenderer renderer(lcd, 20, 4);

// Global Menu Item declarations
const AnyMenuInfo minfoMoreRunMe = { "Run me", 5, 0xffff, 0, onRunMe };
ActionMenuItem menuMoreRunMe(&minfoMoreRunMe, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnMoreRtCall, backSubItemRenderFn, "More", -1, NO_CALLBACK)
const SubMenuInfo minfoMore = { "More", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackMore(fnMoreRtCall, &menuMoreRunMe);
SubMenuItem menuMore(&minfoMore, &menuBackMore, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnTextRtCall, textItemRenderFn, "Text", 12, NO_CALLBACK)
TextMenuItem menuText(fnTextRtCall, "", 3, 5, &menuMore);
RENDERING_CALLBACK_NAME_INVOKE(fnLargeNumRtCall, largeNumItemRenderFn, "LargeNum", 4, NO_CALLBACK)
EditableLargeNumberMenuItem menuLargeNum(fnLargeNumRtCall, LargeFixedNumber(6, 0, 222U, 0U, false), 2, false, &menuText);
const AnalogMenuInfo minfoBacklight = { "Backlight", 1, 2, 255, onBacklight, 0, 1, "" };
AnalogMenuItem menuBacklight(&minfoBacklight, 100, &menuLargeNum);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).

    // Code generated by plugins.
    lcd.setIoAbstraction(ioexp_aw9523);
    lcd.begin(20, 4);
    renderer.setUpdatesPerSecond(2);
    switches.init(ioexp_aw9523, SWITCHES_NO_POLLING, true);
    menuMgr.initForEncoder(&renderer, &menuBacklight, 1, 2, 0);
}

